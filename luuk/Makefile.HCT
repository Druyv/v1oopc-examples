#############################################################################
#
# Project Makefile
#
# (c) Wouter van Ooijen (www.voti.nl) 2016
#
# This file is in the public domain.
# 
#############################################################################

IPASS_DIR := $(dir $(lastword $(MAKEFILE_LIST)))

TARGET  ?= arduino_due

CAR = true

ifdef CAR
	PROJECT ?= mainCar
else
	PROJECT ?= mainRemote
endif

SEARCH ?=
SEARCH += $(IPASS_DIR)inc/
SEARCH += $(IPASS_DIR)lib/


#HEADERS := inc/PCA9685.hpp inc/motorController.hpp inc/inputController.hpp inc/joystick.hpp inc/MovingAverage.hpp
HEADERS ?=
HEADERS += $(wildcard $(IPASS_DIR)inc/*.hpp)


#SOURCES := lib/PCA9685.cpp lib/motorController.cpp lib/inputController.cpp lib/joystick.cpp
SOURCES ?=
SOURCES += $(wildcard $(IPASS_DIR)lib/*.cpp)


SERIAL_PORT ?= COM14
CONSOLE_BAUDRATE  := 115200

#not sure if needed anymore
HEAP := BMPTK

RELATIVE          ?= .
TI-SOFTWARE       := $(RELATIVE)/..

# add hwlib
HWLIB             ?= $(TI-SOFTWARE)/hwlib
include           $(HWLIB)/makefile.inc

%.list:
	$(info $(foreach el,$($*),$(el);))


listify = $(info $(foreach el,$(1),$(el);))

get_sources:
	$(call listify,$(SOURCES))


get_includes:
	$(call listify,$(INCLUDES))



commonflags := $(COMMON) $(LIBS)
get_common_flags:
	$(call listify,$(commonflags))

get_project:
	$(info $(PROJECT))


get_as_flags:
	$(call listify,$(all_as_flags))

c_only_flags := $(C_LANGUAGE) $(TARGET_C_FLAGS) $(PROJECT_C_FLAGS)

get_c_flags:
	$(call listify,$(c_only_flags))

cpp_only_flags := $(CPP_LANGUAGE) $(CPP_RTTI) $(CPP_EXCEPTIONS) $(CPP_THREADSAFE) $(CPP_CXA) $(TARGET_CPP_FLAGS) $(PROJECT_CPP_FLAGS)

get_cpp_flags:
	$(call listify,$(cpp_only_flags))


get_prefix:
	$(info $(PREFIX))

